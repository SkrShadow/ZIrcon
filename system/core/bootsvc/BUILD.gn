# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/unification/zbi/zbi_input.gni")

group("bootsvc") {
  deps = [
    ":bin-input",
    ":cmdline",
  ]
}

zbi_input("cmdline") {
  visibility = [ ":*" ]
  type = "cmdline"
  args = [ "--entry=userboot.root=pkg/bootsvc" ]
}

executable("bin") {
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  output_name = "bootsvc"
  sources = [
    "bootfs-loader-service.cc",
    "bootfs-loader-service.h",
    "bootfs-service.cc",
    "bootfs-service.h",
    "main.cc",
    "svcfs-service.cc",
    "svcfs-service.h",
  ]
  deps = [
    ":util",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_c",
    "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fidl",
    "//zircon/public/lib/zx",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/bootfs",
    "//zircon/system/ulib/fidl-async",
    "//zircon/system/ulib/fs",
    "//zircon/system/ulib/launchpad",
    "//zircon/system/ulib/loader-service",
    "//zircon/system/ulib/memfs",
    "//zircon/system/ulib/memfs:memfs-cpp",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-engine",
  ]
}

# This is also used by code in test/.
source_set("util") {
  visibility = [ "./*" ]
  sources = [
    "util.cc",
    "util.h",
  ]
  deps = [ "//zircon/public/lib/safemath" ]
  public_deps = [
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
    "//zircon/system/ulib/fs",
  ]
}

zbi_input("bin-input") {
  # Using a prefix to install bootsvc in the same spot on zbi's
  # as back when it was built by the ZN build.
  # Note that this may be removed post-unification.
  prefix = "pkg/bootsvc"
  deps = [ ":bin" ]
}
